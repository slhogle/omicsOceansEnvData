---
title: "Download environmental data from Pangaea.de"
subtitle: "Tara Oceans workflow"
author: "Shane Hogle"
date: today
abstract: "Code in this notebook downloads different Tara Oceans data sets from [Pangaea.de](https://pangaea.de/), formats them slightly, then saves them for later use."
---

*Citation:*

>Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

Note that the data sets zip bundled at <https://doi.pangaea.de/10.1594/PANGAEA.875582> (above reference) are data sets @sec-PANGAEA.875576, @sec-PANGAEA.875577, @sec-PANGAEA.875579 in the sections below.

# Setup

This code loads required libraries and sets global variables

```{r}
#| output: false
library(tidyverse)
library(here)
library(fs)
library(readxl)
library(archive)
library(sf)
library(pangaear)
library(janitor)
```

# Read NCBI BioSample data saved from the last step

```{r}
tara_biosamples <- readr::read_rds(here::here("_data_raw", "tara", "tara_biosamples_mapped.rds"))
```

# Standard Campaign samples from Pangaea.de

These compiled data sets only contain environmental measurements and metadata for the Standard Camapaign and not the Polar Campaign (as far as I can tell). We'll need to deal with the Polar Campaign samples later in this notebook.

## Registry of Tara Stations from (PANGAEA.842237) {#sec-PANGAEA.842237}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.842237>

*Citation:*

> Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2015): Registry of all stations from the Tara Oceans Expedition (2009-2013) [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.842237

```{r}
#| warning: false
#| echo: true
#| eval: false
PANGAEA_842237 <- pangaear::pg_data(doi = '10.1594/PANGAEA.842237')[[1]][['data']] %>% 
  janitor::clean_names() %>% 
  dplyr::rename_with(.cols = 1:last_col(), ~ stringr::str_c('PANGAEA.842237_', 
                                                            stringr::str_pad(1:49, side = "left", pad = "0", width = 3))) %>% 
    dplyr::rename(tara_campaign = 1,
                tara_station = 2,
                date_time = 3,
                date_time2 = 4,
                latitude = 5,
                longitude = 6,
                lat_north = 7,
                lat_south = 8,
                long_east = 9,
                long_west = 10,
                time_day = 11)

# save for later
readr::write_rds(PANGAEA_842237, here::here("_data_raw", "tara", "PANGAEA_842237.rds"), compress = "xz", compression = 9L)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_842237 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_842237.rds"))
```


## Sequencing library information (PANGAEA.875581) {#sec-PANGAEA.875581}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875581>

*Citation:*

> Alberti, Adriana; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Methodology used in the lab for molecular analyses and links to the Sequence Read Archive of selected samples from the Tara Oceans Expedition (2009-2013) [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875581, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# extrac to temporary directory
archive::archive_extract(
  "https://store.pangaea.de/Projects/TARA-OCEANS/Samples_Registry/TARA_SAMPLES_CONTEXT_SEQUENCING_20170515.zip",
  dir = tmpdir,
  files = NULL,
  options = character(),
  strip_components = 0L
)

PANGAEA_875581 <- readxl::read_excel(fs::dir_ls(tmpdir), skip = 19) %>% 
  dplyr::select(-1) %>% 
  dplyr::slice(-1) %>% 
  mutate(across(7:9, as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_station = 4,
                tara_event = 5, 
                env_ontology = 6,
                depth = 7,
                depth_min = 8,
                depth_max = 9,
                size_low_thresh = 10,
                size_high_thresh = 11,
                tara_id01 = 12,
                tara_id02 = 13,
                tara_id03 = 14) %>% 
  dplyr::rename_with(.cols = 15:last_col(), ~ stringr::str_c('PANGAEA.875581_', stringr::str_pad(15:24, side = "left", pad = "0", width = 3)))

# save for later
readr::write_rds(PANGAEA_875581, here::here("_data_raw", "tara", "PANGAEA_875581.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::dir_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875581 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875581.rds"))
```

## Carbonate chemistry (PANGAEA.875567) {#sec-PANGAEA.875567}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875567>

*Citation:*

> Guidi, Lionel; Gattuso, Jean-Pierre; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about carbonate chemistry in the targeted environmental feature [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875567, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# extrac to temporary directory
archive::archive_extract(
  "https://store.pangaea.de/Projects/TARA-OCEANS/Samples_Registry/TARA_SAMPLES_CONTEXT_ENV-DEPTH-CARB_20170515.zip",
  dir = tmpdir,
  files = NULL,
  options = character(),
  strip_components = 0L
)

PANGAEA_875567 <- readxl::read_excel(fs::dir_ls(tmpdir), skip = 21) %>% 
  # for setting column types. For some reason I can't maket his work within readxl
  # https://github.com/tidyverse/readxl/issues/198
  mutate(across(19:last_col(), as.numeric)) %>% 
  mutate(across(19:last_col(), ~ifelse(is.nan(.), NA, .))) %>% 
  dplyr::select(-1) %>% 
  dplyr::slice(-1) %>%
  mutate(across(7:9, as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_station = 4,
                tara_event = 5, 
                env_ontology = 6,
                depth = 7,
                depth_min = 8,
                depth_max = 9,
                size_low_thresh = 10,
                size_high_thresh = 11,
                tara_id01 = 12,
                tara_id02 = 13,
                tara_id03 = 14) %>% 
  dplyr::rename_with(.cols = 15:last_col(), ~ stringr::str_c('PANGAEA.875567_', str_pad(15:68, side = "left", pad = "0", width = 3)))

# save for later
readr::write_rds(PANGAEA_875567, here::here("_data_raw", "tara", "PANGAEA_875567.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::dir_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875567 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875567.rds"))
```

## Nutrient concentrations (PANGAEA.875575) {#sec-PANGAEA.875575}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875575>

*Citation:*

> Guidi, Lionel; Morin, Pascal; Coppola, Laurent; Tremblay, Jean-Ã‰ric; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about nutrients in the targeted environmental feature [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875575, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582


```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# extrac to temporary directory
archive::archive_extract(
  "https://store.pangaea.de/Projects/TARA-OCEANS/Samples_Registry/TARA_SAMPLES_CONTEXT_ENV-DEPTH-NUT_20170515.zip",
  dir = tmpdir,
  files = NULL,
  options = character(),
  strip_components = 0L
)

PANGAEA_875575 <- readxl::read_excel(fs::dir_ls(tmpdir), skip = 21)  %>% 
  # for setting column types. For some reason I can't maket his work within readxl
  # https://github.com/tidyverse/readxl/issues/198
  mutate(across(19:last_col(), as.numeric)) %>% 
  mutate(across(19:last_col(), ~ifelse(is.nan(.), NA, .))) %>% 
  dplyr::select(-1) %>% 
  dplyr::slice(-1) %>%
  mutate(across(7:9, as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_station = 4,
                tara_event = 5, 
                env_ontology = 6,
                depth = 7,
                depth_min = 8,
                depth_max = 9,
                size_low_thresh = 10,
                size_high_thresh = 11,
                tara_id01 = 12,
                tara_id02 = 13,
                tara_id03 = 14) %>% 
  dplyr::rename_with(.cols = 15:last_col(), ~ stringr::str_c('PANGAEA.875575_', str_pad(15:38, side = "left", pad = "0", width = 3)))

# save for later
readr::write_rds(PANGAEA_875575, here::here("_data_raw", "tara", "PANGAEA_875575.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::dir_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875575 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875575.rds"))
```

## Pigment concentrations (PANGAEA.875569) {#sec-PANGAEA.875569}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875569>

*Citation:*

> Guidi, Lionel; Ras, Josephine; Claustre, HervÃ©; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about pigment concentrations (HPLC) in the targeted environmental feature [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875569, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# extrac to temporary directory
archive::archive_extract(
  "https://store.pangaea.de/Projects/TARA-OCEANS/Samples_Registry/TARA_SAMPLES_CONTEXT_ENV-DEPTH-HPLC_20170515.zip",
  dir = tmpdir,
  files = NULL,
  options = character(),
  strip_components = 0L
)

PANGAEA_875569 <- readxl::read_excel(fs::dir_ls(tmpdir), skip = 21) %>% 
  # for setting column types. For some reason I can't maket his work within readxl
  # https://github.com/tidyverse/readxl/issues/198
  mutate(across(19:last_col(), as.numeric)) %>% 
  mutate(across(19:last_col(), ~ifelse(is.nan(.), NA, .))) %>% 
  dplyr::select(-1) %>% 
  dplyr::slice(-1) %>% 
  mutate(across(7:9, as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_station = 4,
                tara_event = 5, 
                env_ontology = 6,
                depth = 7,
                depth_min = 8,
                depth_max = 9,
                size_low_thresh = 10,
                size_high_thresh = 11,
                tara_id01 = 12,
                tara_id02 = 13,
                tara_id03 = 14) %>% 
  dplyr::rename_with(.cols = 15:last_col(), ~ stringr::str_c('PANGAEA.875569_', str_pad(15:143, side = "left", pad = "0", width = 3)))

# save for later
readr::write_rds(PANGAEA_875569, here::here("_data_raw", "tara", "PANGAEA_875569.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::dir_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875569 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875569.rds"))
```

## Sensor data (PANGAEA.875576) {#sec-PANGAEA.875576}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875576>

*Citation:*

> Guidi, Lionel; Picheral, Marc; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about sensor data in the targeted environmental feature [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875576, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# download the file
download.file("https://doi.pangaea.de/10.1594/PANGAEA.875576?format=textfile", 
              tmpdir, 
              "curl", quiet = FALSE, mode = "w",
              cacheOK = TRUE,
              extra = getOption("download.file.extra"),
              headers = NULL)

# this is annoying. The pangeae text files have a bunch of metadata headers between the characters
#/* */ and but I couldn't immediately think of a way to parse a that in readr so I just grepped "*/"
# which basically means we must read the file twice and take the performance hit. Also this may be 
# brittle in a way that I can't anticipate right now
skipline <- grep('\\*/', readLines(tmpdir))

PANGAEA_875576 <- read_tsv(tmpdir, skip = skipline) %>% 
  mutate(across(13:15, as.numeric)) %>% 
  mutate(across(24:last_col(), as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_basis = 4, 
                tara_campaign = 5, 
                tara_station = 6,
                sampling_device = 7, 
                tara_event = 8, 
                date_time = 9,
                latitude = 10,
                longitude = 11,
                env_ontology = 12,
                depth = 13,
                depth_min = 14, 
                depth_max = 15,
                size_low_thresh = 16,
                size_high_thresh = 17,
                tara_id01 = 18,
                tara_id02 = 19,
                tara_id03 = 20) %>%
  mutate(date_time = lubridate::ymd_hms(date_time)) %>% 
  dplyr::rename_with(.cols = 21:last_col(), ~ stringr::str_c('PANGAEA.875576_', str_pad(21:147, side = "left", pad = "0", width = 3)))

# save the data for reuse
readr::write_rds(PANGAEA_875576, here::here("_data_raw", "tara", "PANGAEA_875576.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::file_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875576 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875576.rds"))
```

## Derived mesoscale features (PANGAEA.875577) {#sec-PANGAEA.875577}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875577>

*Citation:*

>Ardyna, Mathieu; d'Ovidio, Francesco; Speich, Sabrina; Leconte, Jade; Chaffron, Samuel; Audic, Stephane; Garczarek, Laurence; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about mesoscale features at the sampling location [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875577, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

Note most of these features seem to be derived from model or satellite data and do not represent *in situ* measurements.

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# download the file
download.file("https://doi.pangaea.de/10.1594/PANGAEA.875577?format=textfile", 
              tmpdir, 
              "curl", quiet = FALSE, mode = "w",
              cacheOK = TRUE,
              extra = getOption("download.file.extra"),
              headers = NULL)

# this is annoying. The pangeae text files have a bunch of metadata headers between the characters
#/* */ and but I couldn't immediately think of a way to parse a that in readr so I just grepped "*/"
# which basically means we must read the file twice and take the performance hit. Also this may be 
# brittle in a way that I can't anticipate right now
skipline <- grep('\\*/', readLines(tmpdir))

PANGAEA_875577 <- read_tsv(tmpdir, skip = skipline) %>% 
  mutate(across(13:15, as.numeric)) %>% 
  mutate(across(24:last_col(), as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_basis = 4, 
                tara_campaign = 5, 
                tara_station = 6,
                sampling_device = 7, 
                tara_event = 8, 
                date_time = 9,
                latitude = 10,
                longitude = 11,
                env_ontology = 12,
                depth = 13,
                depth_min = 14,
                depth_max = 15,
                size_low_thresh = 16,
                size_high_thresh = 17,
                tara_id01 = 18,
                tara_id02 = 19,
                tara_id03 = 20) %>%
  mutate(date_time = lubridate::ymd_hms(date_time)) %>% 
  dplyr::rename_with(.cols = 21:last_col(), ~ stringr::str_c('PANGAEA.875577_', str_pad(21:71, side = "left", pad = "0", width = 3)))

# save the data for reuse
readr::write_rds(PANGAEA_875577, here::here("_data_raw", "tara", "PANGAEA_875577.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::file_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875577 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875577.rds"))
```

## Whole water column features (PANGAEA.875579) {#sec-PANGAEA.875579}

Source URL: <https://doi.pangaea.de/10.1594/PANGAEA.875579>

*Citation:*

>Speich, Sabrina; Chaffron, Samuel; Ardyna, Mathieu; Pesant, Stephane; Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Environmental context of all samples from the Tara Oceans Expedition (2009-2013), about the water column features at the sampling location [dataset]. PANGAEA, https://doi.org/10.1594/PANGAEA.875579, In: Tara Oceans Consortium, Coordinators; Tara Oceans Expedition, Participants (2017): Registry of all samples from the Tara Oceans Expedition (2009-2013) [dataset publication series]. PANGAEA, https://doi.org/10.1594/PANGAEA.875582

These features seem to contain information about specific features in the water column like the DCM, primary nitrite maximum, and the depth of the O2 minimum.

```{r}
#| warning: false
#| echo: true
#| eval: false
# create temporary location to decompress
tmpdir <- fs::file_temp()

# download the file
download.file("https://doi.pangaea.de/10.1594/PANGAEA.875579?format=textfile", 
              tmpdir, 
              "curl", quiet = FALSE, mode = "w",
              cacheOK = TRUE,
              extra = getOption("download.file.extra"),
              headers = NULL)

# this is annoying. The Pangaea text files have a bunch of metadata headers between the characters
#/* */ and but I couldn't immediately think of a way to parse a that in readr so I just grepped "*/"
# which basically means we must read the file twice and take the performance hit. Also this may be 
# brittle in a way that I can't anticipate right now
skipline <- grep('\\*/', readLines(tmpdir))

PANGAEA_875579 <- read_tsv(tmpdir, skip = skipline) %>% 
  mutate(across(13:15, as.numeric)) %>% 
  mutate(across(33:last_col(), as.numeric)) %>% 
  dplyr::rename(tara_barcode_num = 1,
                biosample_acc_num = 2,
                ena_acc_num = 3, 
                tara_basis = 4, 
                tara_campaign = 5, 
                tara_station = 6,
                sampling_device = 7, 
                tara_event = 8, 
                date_time = 9,
                latitude = 10,
                longitude = 11,
                env_ontology = 12,
                depth = 13,
                depth_min = 14,
                depth_max = 15,
                size_low_thresh = 16,
                size_high_thresh = 17,
                tara_id01 = 18,
                tara_id02 = 19,
                tara_id03 = 20) %>%
  mutate(date_time = lubridate::ymd_hms(date_time)) %>% 
  dplyr::rename_with(.cols = 21:last_col(), ~ stringr::str_c('PANGAEA.875579_', str_pad(21:123, side = "left", pad = "0", width = 3)))

# save the data for reuse
readr::write_rds(PANGAEA_875579, here::here("_data_raw", "tara", "PANGAEA_875579.rds"), compress = "xz", compression = 9L)

# Remove decompressed coverage directory from temp location
fs::file_delete(tmpdir)
```

```{r}
#| eval: true
#| echo: false
PANGAEA_875579 <- readr::read_rds(here::here("_data_raw", "tara", "PANGAEA_875579.rds"))
```

# Join NCBI BioSamples data to Tara sequencing table

This allows us to harmonize the two datasets for efficient joining later. Notably each dataset from PANGAEA has as `tara_barcode_num` number that is unique, for example

```{r}
nrow(PANGAEA_875576) == nrow(dplyr::distinct(PANGAEA_875576, tara_barcode_num))
```

Here we will associate a Tara barcode to each of the NCBI sequencing datasets that we can use to join to environmental tables later. We start with the listing of sequencing libraries in @sec-PANGAEA.875581. Frst we

These are samples that are strictly matching by joining across all sequencing identifiers: `biosample`, `run_acc`, `exp_acc`, `sra/ena_acc`, and `bioproject/study_acc`

```{r}
tara_biosamples_strict_match <- tara_biosamples %>% 
  dplyr::select(biosample_acc_num, tara_station, run_accession, experiment_accession, sra_acc_num, study_accession) %>% 
  inner_join(., PANGAEA_875581, 
          by = join_by(biosample_acc_num, tara_station,
                       run_accession == PANGAEA.875581_021,
                       experiment_accession == PANGAEA.875581_020,
                       sra_acc_num == ena_acc_num, 
                       study_accession == PANGAEA.875581_015))
```

Most sequencing samples (1332) we can match right away, but this still seems to be a lot of missing data...

```{r}
tara_biosamples_strict_unmatch <- tara_biosamples %>%
  anti_join(., PANGAEA_875581, 
          by = join_by(biosample_acc_num, tara_station,
                       run_accession == PANGAEA.875581_021,
                       experiment_accession == PANGAEA.875581_020,
                       sra_acc_num == ena_acc_num, 
                       study_accession == PANGAEA.875581_015))
```

There are 487 samples that don't match quite so strictly. These will require further inspection.

What are the NCBI BioSamples that don't even match with a Tara Station? 

```{r}
anti_join(tara_biosamples_strict_unmatch, PANGAEA_875581, 
          by = join_by(tara_station)) %>% 
  distinct(tara_station)
```

So these Tara Stations aren't even preset in the listing from @sec-PANGAEA.875581. Most of the missing stations are Polar Stations but also some from the standard campaign. Can we find them in another Tara dataset - the nutrients dataset? 

```{r}
anti_join(tara_biosamples_strict_unmatch, PANGAEA_875575, 
          by = join_by(tara_station)) %>% 
  distinct(tara_station)
```

OK, so at least all the stations are in the nutrients (I also checked all others). So the Sequencing library registry in Pangaea is incomplete. But this is good because I don't have to download a bunch of Polar Tara Stations individually.

These are the NCBI samples with a strict match to the Tara Nutrients data set. After formatting below these should now be fully joinable to any Tara environmental dataset from Pangaea.de using the `tara_barcode_number.`

```{r}
tara_biosamples_strict_match <- tara_biosamples %>% 
  dplyr::select(biosample_acc_num, tara_station, run_accession, experiment_accession, sra_acc_num, study_accession) %>% 
  inner_join(., PANGAEA_875575, 
          by = join_by(biosample_acc_num, 
                       tara_station,
                       sra_acc_num == ena_acc_num
                       )) %>% 
  dplyr::select(tara_barcode_num, 
                sra_acc_num,
                sra_biosample_acc_num = biosample_acc_num,
                sra_run_acc_num = run_accession, 
                sra_exp_acc_num = experiment_accession, 
                sra_study_acc_num = study_accession,
                tara_station, tara_event, env_ontology, depth, depth_min, depth_max,
                size_low_thresh, size_high_thresh, tara_id01, tara_id02, tara_id03) %>% 
  mutate(ena_acc_num = sra_acc_num,
         biosample_acc_num = sra_biosample_acc_num) %>% 
  relocate(tara_barcode_num, ena_acc_num, biosample_acc_num, .after = sra_study_acc_num)

nrow(tara_biosamples_strict_match)
```

These are NCBI samples without a strict match to the Tara Nutrients dataset

```{r}
tara_biosamples_strict_unmatch <- tara_biosamples %>%
  anti_join(., PANGAEA_875575, 
          by = join_by(biosample_acc_num, 
                       tara_station,
                       sra_acc_num == ena_acc_num
                       ))

nrow(tara_biosamples_strict_unmatch)
```

Both these sets fully comprise the full NCBI sequence library listing

```{r}
nrow(tara_biosamples_strict_match) + nrow(tara_biosamples_strict_unmatch) == nrow(tara_biosamples)
```

Here we attempting to join using less strict matching conditions. Code below does

1. Join `tara_biosamples_strict_unmatch` to sensors (`PANGAEA_875576`) only using Tara Station (`tara_station`). We keep only matching observations to `tara_biosamples_strict_unmatch.` This will generate extra fields from the join - some of these are redundant some are not. They have format of `same_variable_name.x` and `same_variable_name.y`
2. Manually filter the joins to only include matches with the same size fractions 
3. Manually filter the joins to include only those match the same `env_ontology`
4. Group by sequencing library identifier (`biosample_acc_num.x` and `run_accession`). `biosample_acc_num.x` comes from the original NCBI sequencing libraries but this doesn't always match with `biosample_acc_num.y` which is the biosample in the Tara Pangaea data sets.
5. Remove duplicates within each grouping (e.g., `slice(1)`)
6. Select only the variables of interest

```{r}
tara_biosamples_fuzy_match <- dplyr::inner_join(tara_biosamples_strict_unmatch, PANGAEA_875575, 
          by = join_by(tara_station)) %>% 
  dplyr::filter(size_low_thresh.x == size_low_thresh.y) %>% 
  dplyr::filter(depth_class == str_extract(env_ontology, "SRF|DCM|MES|MIX")) %>% 
  dplyr::group_by(biosample_acc_num.x, run_accession) %>% 
  dplyr::slice(1) %>% 
  dplyr::ungroup() %>% 
  dplyr::select(sra_acc_num,
                sra_biosample_acc_num = biosample_acc_num.x,
                sra_run_acc_num = run_accession, 
                sra_exp_acc_num = experiment_accession, 
                sra_study_acc_num = study_accession,
                tara_barcode_num,
                biosample_acc_num = biosample_acc_num.y,
                tara_station, 
                tara_event = tara_event.y, 
                env_ontology, 
                depth = depth.y, depth_min, depth_max,
                size_low_thresh = size_low_thresh.y, 
                size_high_thresh = size_high_thresh.y, 
                tara_id01, tara_id02, tara_id03)
```

Now we will add these two data sets - the one that strictly matched and the one that we needed to do a more fuzzy match with - back together. Importantly, each NCBI sequencing identifier requested by my collaborator's team can now be associated to a unique Tara barcode number. This will be saved for later access. Next step is to access the environmental data and various metadata for the NCBI sequencing libraries

```{r}
bind_rows(tara_biosamples_fuzy_match, tara_biosamples_strict_match) %>% 
  dplyr::select(sra_acc_num:tara_barcode_num, tara_station) %>% 
  arrange(tara_station) %>% 
  write_tsv(here::here("data", "tara", "ncbi2tara_barcode.tsv"))
```
